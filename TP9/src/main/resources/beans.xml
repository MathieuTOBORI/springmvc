<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd">

<!-- <context:annotation-config/> -->

	<mvc:annotation-driven />

<context:component-scan base-package="org.formation.spring"></context:component-scan>
  	<bean id="client" class="org.formation.spring.model.Client">
		<property name="id" value="1" />
	 	<property name="nom" value="AutoWired" />
	 	<property name="prenom" value="Tata" />
	</bean>
		<bean id="adresse" class="org.formation.spring.model.Adresse"
		p:numero="42" p:rue="autowired street" p:ville="Paris" />


	<!-- <bean id="reportService" class="org.formation.spring.service.ReportService"> -->
	<!-- <property name="reportGenerator" ref="htmlReport"></property> -->
	<!-- </bean> -->
	<bean id="reportService" class="org.formation.spring.service.ReportService"
		scope="singleton">
		<constructor-arg ref="pdfReport"></constructor-arg>
	</bean>
	<bean id="htmlReport" class="org.formation.spring.report.ReportFactory"
		factory-method="createReport">
		<constructor-arg value="htmlReport"></constructor-arg>
	</bean>
	<bean id="pdfReport" class="org.formation.spring.report.ReportFactory"
		factory-method="createReport">
		<constructor-arg value="pdfReport"></constructor-arg>
	</bean>
	
 	<bean id="transactionManager" 
 		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
 		c:_-ref="sessionFactory" />

<bean id="metier" class="org.formation.spring.service.PrestiBanqueServiceImpl">
<property name="clientDao" ref="daoHibernate"></property>
</bean>

<bean id="daoHibernate" class="org.formation.spring.dao.ClientDaoImplHibernate">
	<constructor-arg ref="sessionFactory"></constructor-arg>
</bean>
 
 	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan" value="org.formation.spring.model" />
		<property name="hibernateProperties">
			<props>
				<prop key="dialect">org.hibernate.dialect.H2Dialect</prop>
				        <prop key="hibernate.hbm2ddl.auto">create-drop</prop>

        <prop key="show_sql">true</prop>
				
			</props>
		</property>
	</bean>

	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>


	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 		<property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
	</bean>

    <context:property-placeholder location="classpath:jdbc.properties"/>
<tx:annotation-driven transaction-manager="transactionManager"/>
	
</beans>
